#version 330 core

out vec4 out_Color;
uniform vec4 color_vector;

uniform vec2 c;
uniform int max_iter;

vec2 mandelfunc(vec2 z, vec2 c){
	return vec2(z.x * z.x - z.y * z.y + c.x, c.y + 2 * z.x * z.y);
}

//return vec2(z.x * z.x - z.y * z.y + c.x, c.y + 2 * z.x * z.y);

void main(){
	float WIDTH = 1920.0f;
	float HEIGHT = 1080.0f;

	vec2 max_coords = vec2(1.5,1.5);
	vec2 min_coords = vec2(-1.5,-1.5);

	float sx = (max_coords.x - min_coords.x) / WIDTH;
	float sy = (max_coords.y - min_coords.y) / HEIGHT;
	float tx = min_coords.x;
	float ty = min_coords.y;

	vec2 z;
	z.x = gl_FragCoord.x * sx + tx;
	z.y = gl_FragCoord.y * sy + ty;
	
	int iter = 0;

	while(iter < max_iter && z.x * z.x + z.y * z.y < 4){
		z = mandelfunc(z, c);
		iter++;
	}

	if(iter < max_iter){
		float col = iter / 250.0f;
		out_Color = vec4(vec3(col), 1);
	}else{
		out_Color = vec4(0,0,0,1);
	}	
}
